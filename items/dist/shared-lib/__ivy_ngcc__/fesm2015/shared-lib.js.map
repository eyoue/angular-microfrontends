{"version":3,"file":"shared-lib.js","sources":["ng:/shared-lib/lib/api-services/crud.service.ts","ng:/shared-lib/public-api.ts","ng:/shared-lib/shared-lib.ts"],"names":[],"mappings":";;;;;IAQa,WAAW,GAAxB,MAAa,WAAW;AACxB,IADA;AAAgB,QAEN,UAAK,GAAW;AAC1B,YAAQ,EAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,EAAC;AAC7D,YAAQ,EAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,EAAC;AAC9D,YAAQ,EAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,EAAC;AAC7D,SAAO,CAAC;AACR,KAwBC;AACD,IAxBS,UAAU,CAAC,IAAY;AAAI,QAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB,QAAI,OAAO,EAAE,CAAC,EAAC,MAAM,EAAE,GAAG,EAAC,CAAC,CAAA;AAC5B,KAAG;AACH,IAAS,QAAQ;AAAK,QAClB,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AACzB,KAAG;AACH,IAAS,YAAY,CAAC,EAAU;AAAI,QAChC,IAAI,SAAS,GAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AAClE,QAAI,IAAI,IAAI,GAAS,IAAI,CAAC;AAC1B,QAAI,IAAI,SAAS,EAAE;AACnB,YAAM,IAAI,GAAG,EAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,WAAW,EAAE,aAAa,GAAG,SAAS,CAAC,IAAI,EAAC,CAAE;AACpI,SAAK;AACL,QAAI,OAAO,EAAE,CAAC,IAAI,CAAC,CAAA;AACnB,KAAG;AACH,IAAS,UAAU,CAAC,IAAY;AAAI,QAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB,QAAI,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AACzB,KAAG;AACH,IAAS,UAAU;AAAK,QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB,QAAI,OAAO,EAAE,CAAC,EAAC,MAAM,EAAE,GAAG,EAAC,CAAC,CAAA;AAC5B,KAAG;AACH;wFAAC;AACD;AAhCa,WAAW,oBAHvB,UAAU,CAAC,UACV,UAAU,EAAE;AAAM,MACnB,CAAC,IACW,WAAW,CA+BvB;;;;gDACD;AAAC;ACxCD;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AAAwB","sourcesContent":["import { Injectable } from '@angular/core';\nimport {Observable, of} from \"rxjs\";\nimport {List} from \"../models/list.model\";\nimport {Item} from \"../models/item.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n\n  private _list: List[] = [\n        {id: 'id-1', name: 'item-1', options: {isItem: true}},\n        {id: 'id-2', name: 'item-2', options: {isItem: false}},\n        {id: 'id-3', name: 'item-3', options: {isItem: true}}\n      ];\n\n  public createList(list: List[]): Observable<{status: number}> {\n    this._list = list;\n    return of({status: 200})\n  }\n  public readList(): Observable<List[]> {\n    return of(this._list)\n  }\n  public readListItem(id: string): Observable<Item> {\n    let itemShort: List = this._list.find(item => item.id === id);\n    let item: Item = null;\n    if (itemShort) {\n      item = {id: itemShort.id, name: itemShort.name, date: new Date().toISOString(), description: 'test item: ' + itemShort.name} ;\n    }\n    return of(item)\n  }\n  public updateList(list: List[]): Observable<List[]> {\n    this._list = list;\n    return of(this._list)\n  }\n  public deleteList(): Observable<{status: number}> {\n    this._list = null;\n    return of({status: 200})\n  }\n}\n","/*\n * Public API Surface of shared-lib\n */\n\nexport * from './lib/models/models';\nexport {CrudService} from './lib/api-services/crud.service'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}